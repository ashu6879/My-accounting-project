name: Deploy to EC2

on:
  push:
    branches:
      - main  # or the branch you want to deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd vite
          npm install

      - name: Build project
        run: |
          cd vite
          npm run build

      - name: Debug rsync command
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # Save the private key to a file
          echo "Saving private key..."
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem

          # Debug: Display the local path before syncing
          echo "Local path before rsync:"
          pwd
          echo "Listing local dist directory:"
          ls -l ./admin_panel_ekarigar/vite/dist

          # Debug: Display the remote path
          echo "Checking remote path on EC2 before rsync:"
          ssh -i private_key.pem -o StrictHostKeyChecking=no -v $USERNAME@$HOST "ls -l /home/ubuntu"

          # Sync files to the EC2 instance using rsync with verbose and debug flags
          echo "Starting rsync to EC2..."
          rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no -v" ./admin_panel_ekarigar/vite/dist $USERNAME@$HOST:/home/ubuntu/dist

          # Debug: Verify contents on EC2 after syncing
          echo "Listing dist directory on EC2 after rsync:"
          ssh -i private_key.pem -o StrictHostKeyChecking=no -v $USERNAME@$HOST "ls -l /home/ubuntu/dist"

      - name: Reload NGINX
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no -v $USERNAME@$HOST "sudo systemctl reload nginx"
